<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mozip.domain.member.MemberRepository"> <!-- namespace 에는 repository 클래스의 경로를 입력 -->
    <!-- 사용자 기본 정보 가져오기 -->
    <resultMap id="mypageDtoMap" type="com.mozip.dto.resp.MypageDto">
        <result property="id" column="ID"/>
        <result property="name" column="USERNAME"/>
        <result property="career" column="CAREER"/>
        <result property="info" column="INFO"/>
        <result property="position" column="POSITION"/>
        <result property="profileImage" column="PROFILE_IMAGE_URL"/>
        <result property="githubLink" column="GITHUB_LINK"/>
    </resultMap>


    <resultMap id="bookmarkListDtoMap" type="com.mozip.dto.resp.MyBookmarkListDto">
        <result property="id" column="ID"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="status" column="STATUS"/>
        <result property="projectTime" column="PROJECT_TIME"/>
        <result property="createdAt" column="CREATE_AT"/>
    </resultMap>

    <resultMap id="myProjectDtoMap" type="com.mozip.dto.resp.MyProjectDto">
        <result property="id" column="ID"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="status" column="STATUS"/>
        <result property="projectTime" column="PROJECT_TIME"/>
        <result property="createdAt" column="CREATED_AT"/>
    </resultMap>

    <select id="newMemberList" resultType="com.mozip.dto.resp.NewMemberListDto">
        <![CDATA[
        SELECT *
        FROM (SELECT ID, USERNAME, POSITION, INFO, PROFILE_IMAGE_URL
              FROM MEMBER
              WHERE IS_MODIFY = 1
              ORDER BY CREATED_AT DESC)
        WHERE ROWNUM <= 6
        ]]>
    </select>

    <select id="getUserInfo" resultMap="mypageDtoMap">
        SELECT ID,
               USERNAME,
               CAREER,
               INFO,
               POSITION,
               PROFILE_IMAGE_URL,
               GITHUB_LINK
        FROM MEMBER
        WHERE ID = #{id}
    </select>

    <select id="getUserProject" resultMap="myProjectDtoMap">
        SELECT p.ID, p.PROJECT_NAME, p.PROJECT_TYPE, p.STATUS, p.PROJECT_TIME, p.CREATED_AT
        FROM MEMBER m
                 INNER JOIN PROJECT p ON m.ID = p.OWNER_ID
        WHERE p.OWNER_ID = #{memberId}
    </select>

    <select id="getUserBookmarks" resultMap="bookmarkListDtoMap">
        SELECT P.ID, P.PROJECT_NAME, P.PROJECT_TYPE, P.STATUS, P.PROJECT_TIME, P.CREATED_AT
        FROM BOOKMARK B
                 JOIN PROJECT P ON B.PROJECT_ID = P.ID
        WHERE B.MEMBER_ID = #{memberId}
    </select>

    <select id="getUserSkill" resultType="java.lang.String">
        SELECT SKILL_NAME
        FROM MEMBER_SKILL
        WHERE MEMBER_ID = #{memberId}
    </select>

    <!-- 마이페이지 수정 -->

    <resultMap id="editUserInfoDtoMap" type="com.mozip.dto.req.MypageEditDto">
        <result property="id" column="ID"/>
        <result property="email" column="EMAIL"/>
        <result property="username" column="USERNAME"/>
        <result property="career" column="CAREER"/>
        <result property="info" column="INFO"/>
        <result property="githubLink" column="GITHUB_LINK"/>
        <result property="profileImage" column="PROFILE_IMAGE_URL"/>
        <result property="position" column="POSITION"/>
    </resultMap>

    <select id="editUserInfo" resultMap="editUserInfoDtoMap">
        SELECT ID,
               EMAIL,
               USERNAME,
               CAREER,
               INFO,
               GITHUB_LINK,
               PROFILE_IMAGE_URL,
               POSITION
        FROM MEMBER
        WHERE ID = #{id}
    </select>

    <select id="findSkill" resultType="java.lang.String">
        SELECT SKILL_NAME
        FROM MEMBER_SKILL
        WHERE MEMBER_ID = #{memberId}
    </select>

    <!-- 멤버 정보를 업데이트하는 쿼리 -->
    <update id="updateInfo" parameterType="com.mozip.dto.req.UpdateMypageEditDto">
        UPDATE MEMBER
        SET EMAIL       = #{email},
            CAREER      = #{career},
            GITHUB_LINK = #{githubLink},
            POSITION    = #{position},
            INFO        = #{info},
            IS_MODIFY   = 1
        WHERE ID = #{memberId}
    </update>

    <!-- 기존 스킬을 삭제하는 쿼리 -->
    <delete id="deleteSkills" parameterType="int">
        DELETE
        FROM MEMBER_SKILL
        WHERE MEMBER_ID = #{memberId}
    </delete>

    <!-- 새로운 스킬을 삽입하는 쿼리 -->
    <insert id="insertSkills">
        INSERT INTO MEMBER_SKILL (ID, MEMBER_ID, SKILL_NAME)
        VALUES (MEMBER_SKILL_SEQ.nextval, #{memberId}, #{skill})
    </insert>

    <!-- 프로필 이미지 등록 -->
    <update id="updateProfileImg">
        UPDATE MEMBER
        SET PROFILE_IMAGE_URL=#{imageDir}
        WHERE ID = ${memberId}
    </update>
</mapper>
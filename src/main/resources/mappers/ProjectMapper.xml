<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mozip.domain.project.ProjectRepository">

    <resultMap id="projectDtoMap" type="com.mozip.dto.resp.ProjectListDto">
        <result property="id" column="ID"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="projectInfo" column="PROJECT_INFO"/>
        <result property="views" column="VIEWS"/>
    </resultMap>

    <resultMap id="recruitDtoMap" type="com.mozip.dto.resp.RecruitListDto">
        <result property="id" column="ID"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="projectInfo" column="PROJECT_INFO"/>
        <result property="views" column="VIEWS"/>
        <result property="status" column="STATUS"/>
        <result property="createTime" column="CREATED_AT"/>
    </resultMap>

    <resultMap id="ShowListDtoMap" type="com.mozip.dto.resp.ShowListDto">
        <result property="id" column="ID"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="views" column="VIEWS"/>
    </resultMap>

    <!--  메인페이지 : 새로운 프로젝트  -->
    <resultMap id="projectDetailMap" type="com.mozip.dto.resp.ProjectDetailDto">
        <result property="id" column="ID"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="status" column="STATUS"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="recruitCount" column="RECRUIT_COUNT"/>
        <result property="views" column="VIEWS"/>
        <result property="projectProcess" column="PROJECT_PROCESS"/>
        <result property="projectPurpose" column="PROJECT_PURPOSE"/>
        <result property="exceptTime" column="EXCEPT_TIME"/>
        <result property="exceptDate" column="EXCEPT_DATE"/>
        <result property="projectTime" column="PROJECT_TIME"/>
        <result property="projectInfo" column="PROJECT_INFO"/>
        <result property="ownerId" column="OWNER_ID"/>
    </resultMap>
    <select id="findNewProject" resultMap="projectDtoMap">
        <![CDATA[
        SELECT ID, PROJECT_NAME, PROJECT_TYPE, PROJECT_INFO, VIEWS
        FROM (SELECT ID, PROJECT_NAME, PROJECT_TYPE, PROJECT_INFO, VIEWS
              FROM PROJECT
              ORDER BY CREATED_AT DESC)
        WHERE ROWNUM <= 6
        ]]>
    </select>

    <!--  메인페이지 : 인기 프로젝트  -->
    <select id="findHotProject" resultMap="projectDtoMap">
        <![CDATA[
        SELECT ID, PROJECT_NAME, PROJECT_TYPE, PROJECT_INFO, VIEWS
        FROM (SELECT ID, PROJECT_NAME, PROJECT_TYPE, PROJECT_INFO, VIEWS
              FROM PROJECT
              ORDER BY VIEWS DESC)
        WHERE ROWNUM <= 6
        ]]>
    </select>

    <!--  메인페이지 : 모집역활  -->
    <select id="findRecruitRoles" resultType="java.lang.String">
        SELECT r.ROLE_NAME
        FROM PROJECT p
                 INNER JOIN RECRUIT_ROLE r ON p.ID = r.PROJECT_ID
        WHERE PROJECT_ID = #{projectId}
    </select>

    <!--  메인페이지 : 북마크 카운트  -->
    <select id="findBookmarkCount" resultType="int">
        SELECT COUNT(*)
        FROM PROJECT p
                 INNER JOIN BOOKMARK b ON p.ID = b.PROJECT_ID
        WHERE b.PROJECT_ID = #{projectId}
    </select>

    <!--  리스트페이지 : 모든 프로젝트  -->
    <select id="findAllProject" resultMap="recruitDtoMap">
        SELECT ID, PROJECT_NAME, PROJECT_INFO, PROJECT_TYPE, VIEWS, STATUS, CREATED_AT
        FROM PROJECT
        ORDER BY CREATED_AT DESC
    </select>

    <!--  메인페이지 : 신청자 카운트  -->
    <select id="findSubscribeCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM SUBSCRIBE INNER JOIN PROJECT ON SUBSCRIBE.PROJECT_ID = PROJECT.ID
        WHERE PROJECT.ID = #{projectId}
    </select>

    <!--  프로젝트자랑페이지 : 모든 프로젝트자랑  -->
    <select id="findAllShowProject" resultMap="ShowListDtoMap">
        SELECT ID, PROJECT_NAME, PROJECT_TYPE, OWNER_ID, VIEWS
        FROM PROJECT
        WHERE IS_SHOW = 1
    </select>

    <!--  프로젝트자랑페이지 : 팀네임  -->
    <select id="findTeamName" resultType="java.lang.String">
        SELECT TEAM_NAME
        FROM TEAM_NOTE INNER JOIN PROJECT ON TEAM_NOTE.PROJECT_ID = PROJECT.ID
        WHERE PROJECT_ID = #{projectId}
    </select>

    <!--  프로젝트자랑페이지 : 새로운 프로젝트  -->
    <select id="findHotShow" resultMap="ShowListDtoMap">
        <![CDATA[
        SELECT ID, PROJECT_NAME, PROJECT_TYPE, VIEWS
        FROM (SELECT ID, PROJECT_NAME, PROJECT_TYPE, VIEWS
        FROM PROJECT
        ORDER BY VIEWS DESC)
        WHERE ROWNUM <= 3
        ]]>
    </select>

    <!--  프로젝트자랑페이지 : 좋아요 카운트  -->
    <select id="findLikeCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM LIKES INNER JOIN PROJECT ON LIKES.PROJECT_ID = PROJECT.ID
        WHERE PROJECT_ID = #{projectId}
    </select>
  
    <select id="findProjectDetail" resultMap="projectDetailMap">
        SELECT ID,
               PROJECT_TYPE,
               STATUS,
               PROJECT_NAME,
               CREATED_AT,
               RECRUIT_COUNT,
               VIEWS,
               PROJECT_PROCESS,
               PROJECT_PURPOSE,
               EXCEPT_TIME,
               EXCEPT_DATE,
               PROJECT_TIME,
               PROJECT_INFO,
               OWNER_ID
        FROM PROJECT
        WHERE ID = #{projectId}
    </select>

    <select id="findProjectMemberCount" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE ID IN (SELECT pm.MEMBER_ID
                     FROM PROJECT p
                              INNER JOIN PROJECT_MEMBER pm ON p.ID = pm.PROJECT_ID
                     WHERE P.ID = #{projectId})
    </select>

    <select id="findOwnerInfo" resultType="com.mozip.dto.resp.ProjectMemberDto">
        SELECT ID,
               USERNAME,
               DECODE(POSITION, NULL, '수정필요!', POSITION),
               DECODE(CAREER, NULL, 0, CAREER),
               CREATED_AT
        FROM MEMBER
        WHERE ID = #{ownerId}
    </select>

    <select id="findProjectSkills" resultType="java.lang.String">
        SELECT ps.SKILL_NAME
        FROM PROJECT p
                 INNER JOIN PROJECT_SKILL ps ON p.ID = ps.PROJECT_ID
        WHERE p.ID = #{projectId}
    </select>

    <select id="findProjectRecruitRoles" resultType="java.lang.String">
        SELECT r.ROLE_NAME
        FROM PROJECT p
                 INNER JOIN RECRUIT_ROLE r ON p.ID = r.PROJECT_ID
        WHERE p.ID = #{projectId}
    </select>

    <select id="findProjectMembers" resultType="com.mozip.dto.resp.ProjectMemberDto">
        SELECT MEMBER_ID, USERNAME, DECODE(POSITION, NULL, '수정필요!', POSITION), DECODE(CAREER, NULL, 0, CAREER), STIME
        FROM (SELECT SUBSCRIBE.MEMBER_ID, SUBSCRIBE.CREATED_AT AS STIME
              FROM SUBSCRIBE
                       INNER JOIN PROJECT ON PROJECT.ID = SUBSCRIBE.PROJECT_ID
              WHERE PROJECT_ID = #{projectId})
                 INNER JOIN MEMBER ON MEMBER_ID = MEMBER.ID
    </select>

    <!-- 프로젝트 자랑 상세페이지(show_detail) -->
    <resultMap id="ShowDetailDtoMap" type="com.mozip.dto.resp.ShowDetailDto">
        <result property="id" column="ID"/>
        <result property="projectType" column="PROJECT_TYPE"/>
        <result property="projectName" column="PROJECT_NAME"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="modifiedShow" column="MODIFIED_SHOW"/>
        <result property="views" column="VIEWS"/>
        <result property="projectProcess" column="PROJECT_PROCESS"/>
        <result property="projectPurpose" column="PROJECT_PURPOSE"/>
        <result property="projectTime" column="PROJECT_TIME"/>
        <result property="recruitCount" column="RECRUIT_COUNT"/>
        <result property="projectInfo" column="PROJECT_INFO"/>
        <result property="ownerId" column="OWNER_ID"/>
        <result property="githubLink" column="GITHUB_LINK"/>
    </resultMap>

    <select id="findShowDetail" resultMap="ShowDetailDtoMap">
        SELECT ID,
               PROJECT_TYPE,
               PROJECT_NAME,
               CREATED_AT,
               MODIFIED_SHOW,
               VIEWS,
               PROJECT_PROCESS,
               PROJECT_PURPOSE,
               PROJECT_TIME,
               RECRUIT_COUNT,
               PROJECT_INFO,
               OWNER_ID,
               GITHUB_LINK
        FROM PROJECT
        WHERE ID =#{projectId}
    </select>

    <!-- 좋아요 카운트 -->
    <select id="findShowLikeCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM LIKES INNER JOIN PROJECT ON LIKES.PROJECT_ID = PROJECT.ID
        WHERE PROJECT_ID = #{projectId}
    </select>

    <!--참여 인원수-->
    <select id="findShowMemberCount" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE ID IN (SELECT pm.MEMBER_ID
                     FROM PROJECT p INNER JOIN PROJECT_MEMBER pm ON p.ID = pm.PROJECT_ID
                     WHERE P.ID = #{projectId})
    </select>

    <!-- 작성자 프로필 정보 가져오기 / !! 프로필 url 추가 해야함 !! -->
    <select id="findShowOwnerInfo" resultType="com.mozip.dto.resp.ProjectMemberDto">
        SELECT p.ID, USERNAME, POSITION, CAREER, m.CREATED_AT
        FROM MEMBER m INNER JOIN PROJECT p ON m.ID = p.OWNER_ID
        WHERE p.Id = #{projectId} AND p.OWNER_ID=#{ownerId}
    </select>

    <!-- 기술 스택 가져오기 -->
    <select id="findShowSkills" resultType="java.lang.String">
        SELECT ps.SKILL_NAME
        FROM PROJECT p INNER JOIN PROJECT_SKILL ps ON p.ID = ps.PROJECT_ID
        WHERE p.ID = #{projectId}
    </select>

    <!-- 모집 분야 가져오기 -->
    <select id="findShowRecruitRoles" resultType="java.lang.String">
        SELECT r.ROLE_NAME
        FROM PROJECT p INNER JOIN RECRUIT_ROLE r ON p.ID = r.PROJECT_ID
        WHERE p.ID = #{projectId}
    </select>
</mapper>
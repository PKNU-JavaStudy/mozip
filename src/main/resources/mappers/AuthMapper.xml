<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mozip.domain.member.AuthRepository">
    <resultMap id="memberMap" type="com.mozip.domain.member.Member">
        <result property="id" column="ID"/>
        <result property="email" column="EMAIL"/>
        <result property="password" column="PASSWORD"/>
        <result property="username" column="USERNAME"/>
        <result property="phone" column="PHONE"/>
        <result property="career" column="CAREER"/>
        <result property="position" column="POSITION"/>
        <result property="info" column="INFO"/>
        <result property="githubLink" column="GITHUB_LINK"/>
        <result property="profileImageUrl" column="PROFILE_IMAGE_URL"/>
        <result property="isModify" column="IS_MODIFY"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="role" column="ROLE" typeHandler="com.mozip.handler.RoleTypeHandler"/>
    </resultMap>

    <!--회원가입-->
    <insert id="joinMember">
        INSERT INTO MEMBER (EMAIL, PASSWORD, USERNAME, PHONE, CAREER, INFO, GITHUB_LINK, PROFILE_IMAGE_URL, POSITION,
                            ROLE,
                            IS_MODIFY, CREATED_AT)
        VALUES (#{dto.email}, #{dto.password}, #{dto.username}, #{dto.phone}, 0, NULL, NULL,
                'profile_sample.png', 0, #{role}, 0, NOW())
    </insert>

    <!--  회원정보 찾기  -->
    <select id="findMember" resultMap="memberMap">
        SELECT ID,
               EMAIL,
               PASSWORD,
               USERNAME,
               PHONE,
               CAREER,
               POSITION,
               INFO,
               GITHUB_LINK,
               PROFILE_IMAGE_URL,
               IS_MODIFY,
               CREATED_AT,
               ROLE
        FROM MEMBER
        WHERE EMAIL = #{email}
    </select>

    <select id="findByEmail" resultType="java.lang.String">
        SELECT EMAIL
        FROM MEMBER
        WHERE EMAIL = #{email}
    </select>

    <select id="findById" resultType="java.lang.String">
        SELECT EMAIL
        FROM MEMBER
        WHERE ID = #{memberId}
    </select>
    <!--프로필 이미지-->
    <update id="updateProfileImg">
        UPDATE MEMBER
        SET PROFILE_IMAGE_URL=#{imageDir}
        WHERE ID = #{memberId}
    </update>

    <!-- 유저네임 찾기 -->
    <select id="findToUsername" resultType="java.lang.String">
        SELECT USERNAME
        FROM MEMBER
        WHERE ID = #{memberId}
    </select>

    <!-- 프로젝트 멤버 추가 -->
    <insert id="projectJoin">
        INSERT INTO PROJECT_MEMBER (PROJECT_ID, MEMBER_ID)
        VALUES (#{projectId}, #{memberId})
    </insert>
    <!--이메일 찾기-->
    <select id="findMemberEmail" parameterType="com.mozip.dto.req.project.FindEmailDto" resultType="java.lang.String">
        SELECT EMAIL
        FROM MEMBER
        WHERE USERNAME = #{username}
          AND PHONE = #{phone}
    </select>

    <!--비밀번호 찾기-->
    <select id="findEmailValidate" resultType="java.lang.String">
        SELECT EMAIL
        FROM MEMBER
        WHERE EMAIL = #{dto.email}
          AND USERNAME = #{dto.username}
          AND PHONE = #{dto.phone}
    </select>

    <!--비밀번호 재설정-->
    <update id="updateMemberPw">
        UPDATE MEMBER
        SET PASSWORD = #{password}
        WHERE EMAIL = #{email}
    </update>
</mapper>


